import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import numpy as np

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —Å–µ–∫—Ç–æ—Ä–æ–≤ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞", layout="wide")

data = {
    "–û–ö–≠–î": [
        "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤",
        "–°–µ–ª—å—Å–∫–æ–µ, –ª–µ—Å–Ω–æ–µ –∏ —Ä—ã–±–Ω–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ",
        "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å",
        "–ì–æ—Ä–Ω–æ–¥–æ–±—ã–≤–∞—é—â–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ä—å–µ—Ä–æ–≤",
        "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å",
        "–°–Ω–∞–±–∂–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–µ–π, –≥–∞–∑–æ–º, –ø–∞—Ä–æ–º, –≥–æ—Ä—è—á–µ–π –≤–æ–¥–æ–π –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤–æ–∑–¥—É—Ö–æ–º",
        "–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ; —Å–±–æ—Ä, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç—Ö–æ–¥–æ–≤, –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π",
        "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
        "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —É—Å–ª—É–≥",
        "–û–ø—Ç–æ–≤–∞—è –∏ —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è; —Ä–µ–º–æ–Ω—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ –º–æ—Ç–æ—Ü–∏–∫–ª–æ–≤"
    ],
    "2014": [6247058.0, 393494.3, 5037119.9, 2912107.0, 1749333.5, 326929.7, 48749.7, 816443.8, 8823890.8, 1382074.4],
    "2015": [6088490.1, 435168.9, 4760156.4, 2579770.9, 1772653.5, 357433.2, 50298.8, 893164.8, 9872452.4, 1439942.3],
    "2016": [6839405.6, 480748.7, 5373653.5, 2715193.5, 2222204.6, 383310.5, 52944.9, 985003.4, 11281186.6, 1670876.3],
    "2017": [7853582.4, 522147.5, 6283949.5, 3238816.5, 2560757.3, 423874.8, 60500.9, 1047485.4, 12186431.1, 1862711.5],
    "2018": [9483735.1, 606063.8, 7734525.7, 4189830.3, 2992380.3, 478744.8, 73570.3, 1143145.6, 13515062.0, 2154013.6],
    "2019": [10631620.1, 678911.8, 8650663.2, 4783751.8, 3318029.4, 468375.0, 80507.0, 1302045.1, 15006504.9, 2489305.0],
    "2020": [11077311.2, 803610.8, 8732162.1, 4360628.2, 3754421.3, 527181.0, 89931.6, 1541538.3, 15594083.6, 2543453.0],
    "2021": [12686607.6, 922684.2, 10206517.3, 5013287.6, 4506592.8, 588070.0, 98566.9, 1736876.1, 17117602.2, 2871816.4],
    "2022": [16269943.6, 1109432.7, 13170633.6, 6863402.2, 5544062.8, 647705.0, 115463.6, 1989877.3, 20250914.2, 3414242.9],
    "2023": [17456038.1, 1319477.6, 13854450.8, 6786106.0, 6182096.6, 755196.9, 131051.3, 2325325.3, 25563787.2, 4187034.7],
    "2024": [18845719.1, 1319477.6, 14880738.1, 7336487.4, 6492927.4, 905060.6, 146262.7, 2645503.4, 29808499.9, 4668356.1]
}

df = pd.DataFrame(data)
df = df.set_index('–û–ö–≠–î')

st.title('üè¢ –ê–Ω–∞–ª–∏–∑ —Å–µ–∫—Ç–æ—Ä–æ–≤ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞')
st.markdown("""
### –ü–æ—á–µ–º—É —Å–µ–∫—Ç–æ—Ä "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —É—Å–ª—É–≥" —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º –¥—Ä–∞–π–≤–µ—Ä–æ–º —ç–∫–æ–Ω–æ–º–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞?
""")

col1, col2, col3 = st.columns(3)

total_2024 = df['2024'].sum()
services_2024 = df.loc['–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —É—Å–ª—É–≥', '2024']
services_share_2024 = (services_2024 / total_2024) * 100

services_growth = ((services_2024 / df.loc['–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —É—Å–ª—É–≥', '2014']) - 1) * 100

yearly_shares = []
for year in df.columns:
    total = df[year].sum()
    share = (df.loc['–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —É—Å–ª—É–≥', year] / total) * 100
    yearly_shares.append(share)
avg_share = np.mean(yearly_shares)

with col1:
    st.metric(
        "–î–æ–ª—è –≤ –í–í–ü (2024)",
        f"{services_share_2024:.1f}%",
        f"+{(services_share_2024 - yearly_shares[0]):.1f}% —Å 2014"
    )
    
with col2:
    st.metric(
        "–†–æ—Å—Ç —Å–µ–∫—Ç–æ—Ä–∞ (2014-2024)",
        f"{services_growth:.1f}%",
        "–ö—É–º—É–ª—è—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç"
    )
    
with col3:
    st.metric(
        "–°—Ä–µ–¥–Ω—è—è –¥–æ–ª—è (2014-2024)",
        f"{avg_share:.1f}%",
        "–°—Ç–∞–±–∏–ª—å–Ω–æ–µ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ"
    )

tab1, tab2, tab3 = st.tabs(["–î–∏–Ω–∞–º–∏–∫–∞ —Ä–æ—Å—Ç–∞", "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑", "–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑"])

with tab1:
    df_transposed = df.transpose()
    fig = px.line(
        df_transposed,
        title='–î–∏–Ω–∞–º–∏–∫–∞ —Ä–æ—Å—Ç–∞ —Å–µ–∫—Ç–æ—Ä–æ–≤ —ç–∫–æ–Ω–æ–º–∏–∫–∏ (2014-2024)',
        labels={'value': '–û–±—ä–µ–º (–º–ª–Ω —Ç–µ–Ω–≥–µ)', 'index': '–ì–æ–¥'},
        height=600
    )
    fig.update_layout(showlegend=True, legend_title_text='–°–µ–∫—Ç–æ—Ä–∞')
    st.plotly_chart(fig, use_container_width=True)

with tab2:
    shares_df = df.copy()
    for year in df.columns:
        total = df[year].sum()
        shares_df[year] = (df[year] / total) * 100

    fig = px.area(
        shares_df.transpose(),
        title='–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ (–¥–æ–ª—è —Å–µ–∫—Ç–æ—Ä–æ–≤, %)',
        labels={'value': '–î–æ–ª—è (%)', 'index': '–ì–æ–¥'},
        height=600
    )
    fig.update_layout(showlegend=True, legend_title_text='–°–µ–∫—Ç–æ—Ä–∞')
    st.plotly_chart(fig, use_container_width=True)

with tab3:
    years = len(df.columns)
    cagr_dict = {}
    for sector in df.index:
        start_value = df.loc[sector, '2014']
        end_value = df.loc[sector, '2024']
        cagr = (end_value / start_value) ** (1/10) - 1
        cagr_dict[sector] = cagr * 100

    fig = px.bar(
        x=list(cagr_dict.keys()),
        y=list(cagr_dict.values()),
        title='–°—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤–æ–π —Ç–µ–º–ø —Ä–æ—Å—Ç–∞ –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º (CAGR, 2014-2024)',
        labels={'x': '–°–µ–∫—Ç–æ—Ä', 'y': 'CAGR (%)'},
        height=500
    )
    fig.update_layout(showlegend=False, xaxis_tickangle=45)
    st.plotly_chart(fig, use_container_width=True)

# Key findings
st.markdown("""
### üìä –ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã:

1. **–î–æ–º–∏–Ω–∏—Ä—É—é—â–∞—è –ø–æ–∑–∏—Ü–∏—è:**
   - –°–µ–∫—Ç–æ—Ä —É—Å–ª—É–≥ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª–µ–µ {:.1f}% –í–í–ü –≤ 2024 –≥–æ–¥—É
   - –£—Å—Ç–æ–π—á–∏–≤—ã–π —Ä–æ—Å—Ç –¥–æ–ª–∏ –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ —Å 2014 –≥–æ–¥–∞

2. **–°—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç:**
   - –ö—É–º—É–ª—è—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç {:.1f}% –∑–∞ 10 –ª–µ—Ç
   - –ù–∞–∏–±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π CAGR —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö —Å–µ–∫—Ç–æ—Ä–æ–≤

3. **–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –≤–Ω–µ—à–Ω–∏–º —à–æ–∫–∞–º:**
   - –ú–µ–Ω—å—à–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ–∫—Ç–æ—Ä–∞–º–∏
   - –°—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç –¥–∞–∂–µ –≤ –∫—Ä–∏–∑–∏—Å–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã

4. **–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–∞–∑–≤–∏—Ç–∏—è:**
   - –¢—Ä–µ–Ω–¥ –Ω–∞ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—é —É—Å–ª—É–≥
   - –†–∞—Å—Ç—É—â–∏–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–ø—Ä–æ—Å
   - –†–∞–∑–≤–∏—Ç–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–∞ —É—Å–ª—É–≥
""".format(services_share_2024, services_growth))

st.markdown("### üìà –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–µ–∫—Ç–æ—Ä–æ–≤")

performance_metrics = pd.DataFrame({
    '–°–µ–∫—Ç–æ—Ä': df.index,
    '–û–±—ä–µ–º 2024 (–º–ª—Ä–¥ —Ç–µ–Ω–≥–µ)': df['2024'] / 1000000,
    '–†–æ—Å—Ç —Å 2014 (%)': ((df['2024'] / df['2014']) - 1) * 100,
    'CAGR (%)': [cagr_dict[sector] for sector in df.index]
})

st.dataframe(
    performance_metrics.style.highlight_max(axis=0, color='lightgreen'),
    hide_index=True
)